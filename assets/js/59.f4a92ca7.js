(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{496:function(t,s,a){t.exports=a.p+"assets/img/flow_chart.1e547528.png"},643:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1 简介")]),t._v(" "),s("p",[t._v("AWTK是 "),s("a",{attrs:{href:"http://www.zlg.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ZLG"),s("OutboundLink")],1),t._v(" 开发的开源 GUI 引擎，前往 "),s("a",{attrs:{href:"https://www.zlg.cn/index/pub/awtk.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("G2D 硬件加速是指将计算量较大的图像处理工作分配给专门的硬件外设来处理，减轻 CPU 的计算量，以此提高图像绘制的性能。")]),t._v(" "),s("p",[t._v("不同硬件平台的硬件加速外设不一样，其实现方法也有区别，在 AWTK 中，用户需要实现 awtk/src/base/g2d.h 文件中的相关接口，详见下表，然后开启宏 WITH_G2D 即可支持硬件加速，具体详见本文 2.21 章节。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数名称")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("g2d_fill_rect")]),t._v(" "),s("td",[t._v("用颜色填充指定的区域")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("g2d_copy_image")]),t._v(" "),s("td",[t._v("把图片指定的区域拷贝到 Framebuffer 中")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("g2d_rotate_image")]),t._v(" "),s("td",[t._v("把图片指定的区域进行旋转并拷贝到 Framebuffer 的相应区域")]),t._v(" "),s("td",[t._v("本函数主要用于辅助实现横屏和竖屏的切换，一般支持90度旋转即可")])]),t._v(" "),s("tr",[s("td",[t._v("g2d_blend_image")]),t._v(" "),s("td",[t._v("把图片指定的区域渲染到 Framebuffer 指定的区域，如果两个指定区域大小不一致则进行缩放")]),t._v(" "),s("td",[t._v("如果硬件设备不支持缩放或者不支持全局 Alpha 融合算法（绘制半透明图像），请返回 RET_NOT_IMPL，使用软件渲染")])])])]),t._v(" "),s("p",[t._v("为方便读者理解，此处以绘制一张半透明的背景图为例，介绍 AWTK 是如何支持硬件加速的，绘制步骤如下：")]),t._v(" "),s("ol",[s("li",[t._v("在 AWTK 中通常会调用画布 canvas 中的 canvas_draw_image 函数绘制图像；")]),t._v(" "),s("li",[t._v("紧接着 canvas_draw_image 函数会调用 LCD 包装的 lcd_draw_image 函数；")]),t._v(" "),s("li",[t._v("在基于 Framebuffer 实现的 LCD 中实际上调用的是 lcd_mem_draw_image 函数；")]),t._v(" "),s("li",[t._v("由于此处绘制的是半透明图像，因此不能直接拷贝绘制，需要调用 image_blend 函数进行渲染；")]),t._v(" "),s("li",[t._v("如果开启宏 WITH_G2D 支持硬件加速，那么 image_blend 函数会调用 g2d_blend_image 函数进行绘制；")]),t._v(" "),s("li",[t._v("如果没有开启宏 WITH_G2D 或者 g2d_blend_image 函数绘制失败，那么就会调用 soft_blend_image 函数进行软件渲染。")])]),t._v(" "),s("blockquote",[s("p",[t._v("备注：")]),t._v(" "),s("ol",[s("li",[t._v("AWTK 中的画布 canvas 提供了基本的绘图功能和状态管理，其接口详见：awtk/src/base/canvas.h。")]),t._v(" "),s("li",[t._v("AWTK 中的 LCD 的相关接口详见：awtk/src/base/lcd.h。")]),t._v(" "),s("li",[t._v("AWTK 提供了基于 Framebuffer 的 LCD 缺省实现，代码详见：awtk/src/lcd/lcd_mem.inc。")]),t._v(" "),s("li",[t._v("基于 Framebuffer 实现的 LCD 通常会调用 awtk/src/blend/image_g2d.h 中的接口进行绘制。")])])]),t._v(" "),s("p",[t._v("绘制半透明背景的流程详见下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(496),alt:"流程图"}})]),t._v(" "),s("h2",{attrs:{id:"_2-awtk内置的stm32-g2d"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-awtk内置的stm32-g2d"}},[t._v("#")]),t._v(" 2 AWTK内置的STM32 G2D")]),t._v(" "),s("p",[t._v("目前，AWTK 内置了 STM32 系列平台 G2D 硬件加速的实现，代码详见：awtk/src/blend/stm32_g2d.c，只需定义下面的宏即可启用该功能：")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("WITH_STM32_G2D")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("备注：定义宏 WITH_STM32_G2D 后，AWTK 会自动定义宏 WITH_G2D 启用硬件加速，用户无需重复定义。")])]),t._v(" "),s("p",[t._v("STM32 平台通过外设 DMA2D（Direct Memory Access 2D）支持硬件加速，此处以实现 g2d.h 文件中的 g2d_fill_rect 函数为例，介绍如何通过 DMA2D 实现硬件加速，其他接口的实现方法类似，详情可参考：awtk/src/blend/stm32_g2d.c。")]),t._v(" "),s("blockquote",[s("p",[t._v("备注：")]),t._v(" "),s("ol",[s("li",[t._v("AWTK 针对 STM32f767igtx 的移植层 awtk-stm32f767igtx-raw 的下载地址：https://github.com/zlgopen/awtk-stm32f767igtx-raw。")]),t._v(" "),s("li",[t._v("DMA2D 的相关说明可参考：awtk-stm32f767igtx-raw/HALLIB/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d。")]),t._v(" "),s("li",[t._v("DMA2D 的使用方法可参考：awtk-stm32f767igtx-raw/HARDWARE/LCD/ltdc.c。")])])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* awtk/src/blend/stm32_g2d.c */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("DMA2D_WORKING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" DMA2D_CR_START"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* DMA2D 是否正在工作（传输）  */")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 等待 DMA2D 工作（传输）完成 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("DMA2D_WAIT")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                              ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DMA2D_WORKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                             ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("IFCR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DMA2D_IFSR_CTCIF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PIXEL_FORMAT_BGRA8888")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0X00")]),t._v("  ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 颜色格式：BGRA8888 */")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PIXEL_FORMAT_BGR565")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0X02")]),t._v("    ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 颜色格式：BGR565 */")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @method g2d_fill_rect\n * 用颜色填充指定的区域。\n * @param {bitmap_t*} fb Framebuffer对象。\n * @param {const rect_t*} dst 要填充的目标区域。\n * @param {color_t} c 填充颜色。\n *\n * @return {ret_t} 返回RET_OK表示成功，否则表示失败，返回失败则上层用软件实现。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g2d_fill_rect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("bitmap_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("rect_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("color_t")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n    * 注意：STM32 的 DMA2D 仅颜色透明度大于 0xf0 以及颜色格式为 BGR565 和 BGRA8888 的硬件加速， \n    * 因此，c.rgba.a 必须大于 0xf0 且 fb->format 必须等于 BITMAP_FMT_BGR565 或 BITMAP_FMT_BGRA8888。\n   */")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 根据 fb->format，获取像素占用字节、颜色格式以及颜色值 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" o_pixsize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" o_format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" BITMAP_FMT_BGR565"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    o_pixsize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    o_format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PIXEL_FORMAT_BGR565"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    o_pixsize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    o_format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PIXEL_FORMAT_BGRA8888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fb_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitmap_lock_buffer_for_write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 为修改数据锁定位图缓冲区 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" o_offline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 计算行偏移 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 计算指定填充区域的起始地址 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" o_addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fb_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" o_pixsize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_DMA2D_CLK_ENABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 使能 DMA2D 时钟 */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DMA2D_CR_START"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 先停止 DMA2D */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DMA2D_R2M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 DMA2D 的传输模式：从寄存器到内存 */")]),t._v("\n\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("OPFCCR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置颜色格式 */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("OOR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o_offline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置行偏移 */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("OMAR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置输出缓冲区地址（指定填充区域的起始地址） */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("OCOLR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置填充颜色 */")]),t._v("\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("NLR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置行数 */")]),t._v("\n\n  DMA2D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" DMA2D_CR_START"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 启动 DMA2D */")]),t._v("\n  DMA2D_WAIT                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 等待 DMA2D 工作（传输）完成 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitmap_unlock_buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 绘制完成，解锁位图缓冲区 */")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" RET_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-nxp-的-pxp-g2d"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-nxp-的-pxp-g2d"}},[t._v("#")]),t._v(" 3 NXP 的 PXP G2D")]),t._v(" "),s("p",[t._v("除了 AWTK 内置的 STM32 平台的硬件加速移植外，在 AWTK 针对 AWorks (RT1052)平台的移植中，提供了 NXP PXP 硬件加速的实现文件，代码详见：awtk-aworks-rt1052/awtk-port/rt1052_g2d.c，只需定义下面的宏即可启用该功能：")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("WITH_PXP_G2D")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])])]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("备注：")]),t._v(" "),s("ol",[s("li",[t._v("移植层 awtk-aworks-rt1052 的下载地址：https://github.com/zlgopen/awtk-aworks-rt1052。")]),t._v(" "),s("li",[t._v("定义宏 WITH_PXP_G2D 后，AWTK 会自动定义宏 WITH_G2D 启用硬件加速，用户无需重复定义。")])])]),t._v(" "),s("p",[t._v("AWorks 平台通过外设 PXP（像素处理）支持硬件加速，此处同样以实现 g2d.h 文件中的 g2d_fill_rect 函数为例，介绍如何通过 PXP 实现硬件加速，其他接口的实现方法类似，详情可参考：awtk-aworks-rt1052/awtk-port/rt1052_g2d.c。")]),t._v(" "),s("blockquote",[s("p",[t._v("备注：如想了解 AWorks 平台 PXP 的详细说明以及使用方法可前往 ZLG 官网下载最新的 RT1052 光盘资料，其中包括文档《AWorks M105x 外设使用指南——PXP》，官网地址：https://www.zlg.cn。")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* awtk-aworks-rt1052/awtk-port/rt1052_g2d.c */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @method g2d_fill_rect\n * 用颜色填充指定的区域。\n * @param {bitmap_t*} fb Framebuffer对象。\n * @param {const rect_t*} dst 要填充的目标区域。\n * @param {color_t} c 填充颜色。\n *\n * @return {ret_t} 返回RET_OK表示成功，否则表示失败，返回失败则上层用软件实现。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g2d_fill_rect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("bitmap_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("rect_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("color_t")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n    * 注意：NXP 的 PXP 仅支持颜色透明度大于 0xf8 以及颜色格式为 BGR565 为的硬件加速，\n    * 因此，c.rgba.a 必须大于 0xf8 且 fb->format 必须等于 BITMAP_FMT_BGR565。\n   */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 定义 PXP 输出缓冲的配置 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pxp_output_buffer_config_t")]),t._v(" pxp_output_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 定义 PXP process surface 的配置，以下简称 PS（此处为填充区域缓冲）*/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pxp_ps_buffer_config_t")]),t._v(" ps_buffer_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" out_pixsize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 像素占用字节 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fb_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitmap_lock_buffer_for_write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 为修改数据锁定位图缓冲区 */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 计算指定填充区域的起始地址 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" out_addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fb_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" out_pixsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 计算需要刷新的缓冲区大小（从填充区域起始地址到结束地址的大小） */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" fb_flush_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" out_pixsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aw_cache_flush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("out_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  fb_flush_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 刷新缓冲区中的数据 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_hard_reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 复位 pxp */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* PXP 输出缓冲配置 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pixel_format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kPXP_OutputPixelFormatRGB565"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置颜色格式 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interlaced_mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kPXP_OutputProgressive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置输出模式 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buffer0_addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置输出缓冲首地址 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pitch_bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" out_pixsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置一行所占的字节数 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置填充区域宽度 */")]),t._v("\n    pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置填充区域高度 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_output_buffer_config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("pxp_output_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更新输出缓存配置 */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* PXP PS 配置 */")]),t._v("\n    ps_buffer_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pixel_format "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kPXP_PsPixelFormatRGB888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置颜色格式 */")]),t._v("\n    ps_buffer_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buffer_addr  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置填充缓存首地址 */")]),t._v("\n    ps_buffer_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pitch_bytes  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" out_pixsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置一行所占的字节数 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_process_surface_buffer_config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ps_buffer_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更新填充缓存配置 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_process_surface_position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 PS 图形位置 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_alpha_surface_position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 AS 图形位置 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_process_surface_color_key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 PS ColorKey */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置填充的颜色 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_set_process_surface_back_ground_color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 启动 PXP */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pxp_complete_status_sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 等待 PXP 图形处理完成 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aw_cache_invalidate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("out_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fb_flush_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 清空缓存中的缓冲区数据 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitmap_unlock_buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 绘制完成，解锁位图缓冲区 */")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" RET_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);