(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{497:function(t,n,a){t.exports=a.p+"assets/img/mvvm.6154080f.png"},498:function(t,n,a){t.exports=a.p+"assets/img/book_manager.21f23df2.png"},644:function(t,n,a){"use strict";a.r(n);var s=a(2),o=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_1-前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1 前言")]),t._v(" "),n("p",[t._v("最近要使用MVVM框架实现图书管理系统的AWTK GUI界面，因此需要学习awtk-mvvm，该项目的说明文档非常详尽，本文仅记录学习awtk-mvvm过程中的要点，并不作为教程，更详细且严谨的请参考awtk-mvvm/docs下的md文档，相信各位也会大有所获。")]),t._v(" "),n("blockquote",[n("p",[t._v("备注：前往 GitHub 下载 "),n("a",{attrs:{href:"http://github.com/zlgopen/awtk-mvvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("awtk-mvvm"),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"_2-什么是mvvm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是mvvm"}},[t._v("#")]),t._v(" 2 什么是MVVM？")]),t._v(" "),n("p",[t._v("MVVM是Model-View-ViewModel的简写。它本质上就是MVC的改进版。MVVM就是将其中的View的状态和行为抽象化，将界面UI和业务逻辑分开，这件事是ViewModel帮我们做的，它可以取出Model的数据，同时帮忙处理View中涉及的业务逻辑（通常是涉及显示内容的处理）。")]),t._v(" "),n("blockquote",[n("p",[t._v("备注：更多关于MVVM的知识请参考：awtk-mvvm/docs/8.intro.md 中的 8.2.3 章节。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(497),alt:"MVVM"}})]),t._v(" "),n("h2",{attrs:{id:"_3-什么是awtk-mvvm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是awtk-mvvm"}},[t._v("#")]),t._v(" 3 什么是AWTK-MVVM？")]),t._v(" "),n("p",[t._v("AWTK-MVVM是一套用C语言开发的，专门为嵌入式平台优化的MVVM框架。它实现了数据绑定、命令绑定和窗口导航等基本功能，使用AWTK-MVVM开发应用程序，无需学习AWTK本身的API，只需学习绑定规则和模型的实现方式即可。")]),t._v(" "),n("p",[t._v("AWTK-MVVM具备代码小、性能高、易调试和隔离彻底等优势，还支持C语言和JS语言开发，但目前不支持界面元素动态生成，当然这个可以通过传统的开发方式解决。")]),t._v(" "),n("blockquote",[n("p",[t._v("备注：更多关于AWTK-MVVM的相关说明请参考：awtk-mvvm/docs/8.intro.md 中的 8.3 章节。")])]),t._v(" "),n("h2",{attrs:{id:"_4-设计图书管理系统的model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-设计图书管理系统的model"}},[t._v("#")]),t._v(" 4 设计图书管理系统的Model")]),t._v(" "),n("h3",{attrs:{id:"_4-1-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-简介"}},[t._v("#")]),t._v(" 4.1 简介")]),t._v(" "),n("p",[t._v("用 AWTK-MVVM 开发应用程序时，开发者的主要工作是编写Model的代码，而ViewModel则由代码产生器自动生成。需要注意的是在编写Model的代码时，要按照固定的规则来编写注释，这些注释的规则在AWTK本身及相关项目中广泛使用，"),n("strong",[t._v("这是重中之重，因为若不按照规则编写注释或者写错、漏写，都会导致自动生成的ViewModel代码有误，影响后续开发。")])]),t._v(" "),n("h3",{attrs:{id:"_4-2-设计需求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-设计需求"}},[t._v("#")]),t._v(" 4.2 设计需求")]),t._v(" "),n("p",[t._v("此处设计一个图书管理系统的Model，其界面如图所示，需要包含刷新、增删改查、清除、退出功能（函数），并且该界面中需要同步图书列表的行数，因此需要包含一个items属性，用于保存当前界面上图书的总数。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(498),alt:"图书管理系统"}})]),t._v(" "),n("h3",{attrs:{id:"_4-3-model代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-model代码"}},[t._v("#")]),t._v(" 4.3 Model代码")]),t._v(" "),n("p",[t._v("图书管理系统的Model命名为book_controller，其头文件为book_controller.h，代码如下：")]),t._v(" "),n("blockquote",[n("p",[t._v("注意：items属性是写在注释中的，其本体为book_manager_t中动态数组的size，这种属性在awtk-mvvm中被称为合成属性。")])]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//book_controller.h")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("BOOK_CONTROLLER_H")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("BOOK_CONTROLLER_H")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tkc/types_def.h"')])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../../src/book/book_manager.h"')])]),t._v("\n\nBEGIN_C_DECLS\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @class book_controller_t\n *\n * @annotation ["model"]\n * 图书管理系统控制器。\n *\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_book_controller_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n   * @property {uint32_t} items\n   * @annotation ["fake", "readable"]\n   * 图书总数。\n   */')]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* private */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_manager_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_create\n * 创建book_controller对象。\n *\n * @annotation ["constructor"]\n * @return {book_controller_t*} 返回book_controller对象。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_destroy\n * 销毁book_controller对象。\n *\n * @annotation ["destructor"]\n * @param {book_controller_t*} bc book_controller对象。\n *\n * @return {ret_t} 返回RET_OK表示成功，否则表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_destroy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @method book_controller_get_items\n * 获取图书总数。\n *\n * @param {book_controller_t*} bc book_controller对象。\n *\n * @return {uint32_t} 返回图书总数。\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_get_items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_refresh\n * 刷新图书\n *\n * @annotation ["command"]\n * @param {book_store_t*} bc book_controller对象。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_refresh")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_add\n * 增加一本图书。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_remove\n * 删除指定id的图书。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n * @param {int32_t} id 图书id。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("int32_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_update\n * 修改指定id的图书。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n * @param {int32_t} id 图书id。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("int32_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_find\n * 查找指定id的图书。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n * @param {int32_t} id 图书id。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("int32_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_clear\n * 清除图书。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n *\n * @return {ret_t} 返回RET_ITEMS_CHANGED表示模型有变化，View需要刷新；返回其它表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @method book_controller_quit\n * 退出。\n *\n * @annotation ["command"]\n * @param {book_controller_t*} bc book_controller对象。\n *\n * @return {ret_t} 返回RET_OK表示成功，否则表示失败。\n */')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ret_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("book_controller_quit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("book_controller_t")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nEND_C_DECLS\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*BOOK_CONTROLLER_H*/")])]),t._v("\n")])])]),n("p",[t._v("仔细观察代码注释中的 annotation 参数，具体说明如下：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("属性/函数")]),t._v(" "),n("th",[t._v("注释 annotation 参数")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("属性")]),t._v(" "),n("td",[t._v("readable")]),t._v(" "),n("td",[t._v("可读的（需实现get函数）")])]),t._v(" "),n("tr",[n("td",[t._v("属性")]),t._v(" "),n("td",[t._v("writable")]),t._v(" "),n("td",[t._v("可写的（需实现set函数）")])]),t._v(" "),n("tr",[n("td",[t._v("属性")]),t._v(" "),n("td",[t._v("fake")]),t._v(" "),n("td",[t._v("合成属性（即该属性由其他属性合成）")])]),t._v(" "),n("tr",[n("td",[t._v("函数")]),t._v(" "),n("td",[t._v("constructor")]),t._v(" "),n("td",[t._v("构造函数")])]),t._v(" "),n("tr",[n("td",[t._v("函数")]),t._v(" "),n("td",[t._v("destructor")]),t._v(" "),n("td",[t._v("析构函数")])]),t._v(" "),n("tr",[n("td",[t._v("函数")]),t._v(" "),n("td",[t._v("command")]),t._v(" "),n("td",[t._v("命令函数")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("备注：更多关于AWTK-MVVM框架Model代码注释规则和函数命名方式的知识请查阅：awtk-mvvm/docs/model.md。")])])])}),[],!1,null,null,null);n.default=o.exports}}]);