(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{481:function(s,a,t){s.exports=t.p+"assets/img/toolchain.9cbec29f.png"},482:function(s,a,t){s.exports=t.p+"assets/img/block_ioctl_code.74a607da.png"},483:function(s,a,t){s.exports=t.p+"assets/img/error.dcec7034.png"},484:function(s,a,t){s.exports=t.p+"assets/img/tslib_port.05cc6b44.png"},638:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-交叉编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-交叉编译器"}},[s._v("#")]),s._v(" 1 交叉编译器")]),s._v(" "),a("p",[s._v("交叉编译器用于在Linux PC上编译嵌入式Linux平台上的项目（tslib），此处采用交叉工具链压缩包（gcc-4.4.4-glibc-2.11.1-multilib-1.0_EasyARM-iMX283.tar.bz2），在Ubuntu虚拟机上的安装配置步骤如下：")]),s._v(" "),a("blockquote",[a("p",[s._v("备注：交叉编译工具链：https://cloud.189.cn/t/MRzQb2beeEFf（访问码：ph5h）")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-安装交叉编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-安装交叉编译器"}},[s._v("#")]),s._v(" 1.1 安装交叉编译器")]),s._v(" "),a("p",[s._v("将gcc-4.4.4-glibc-2.11.1-multilib-1.0_EasyARM-iMX283.tar.bz2拷贝到Ubuntu虚拟机上，解压到指定目录（添加环境变量会使用该目录），此处目录为/home/user/tools/，在压缩包目录下打开终端，执行以下命令：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-jxvf")]),s._v(" gcc-4.4.4-glibc-2.11.1-multilib-1.0_EasyARM-iMX283.tar.bz2 –C /home/user/tools/\n")])])]),a("p",[s._v("解压完成后可在gcc-4.4.4-glibc-2.11.1-multilib-1.0/arm-fsl-linux-gnueabi/bin目录下看到交叉编译器。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-设置环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-设置环境变量"}},[s._v("#")]),s._v(" 1.2 设置环境变量")]),s._v(" "),a("p",[s._v("打开全局配置文件，在终端中执行以下命令：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/profile\n")])])]),a("p",[s._v("在文件末尾将交叉编译器所在的路径添加到全局环境变量中，需要添加的文本如下：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/home/user/tools/gcc-4.4.4-glibc-2.11.1-multilib-1.0/arm-fsl-linux-gnueabi/bin/\n")])])]),a("p",[s._v("执行修改过后的全局配置文件，在终端中执行以下命令（点+空格+文件名）：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /etc/profile\n")])])]),a("p",[s._v("执行完毕后重启虚拟机，检查交叉编译器是否成功添加至全局变量，在终端中输入“arm-”，然后按下键盘上的TAB键，若添加成功，则可以看见很多“arm-fsl-linux-gnueabi”、 “arm-linux”、“arm-none-linux-gnueabi”开头的命令，如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:t(481),alt:"交叉编译工具链"}})]),s._v(" "),a("h3",{attrs:{id:"_1-3-测试交叉编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-测试交叉编译器"}},[s._v("#")]),s._v(" 1.3 测试交叉编译器")]),s._v(" "),a("p",[s._v("在终端中输入交叉编译器命令，例如arm-none-linux-gnueabi-gcc，然后回车，能够得到以下信息，说明交叉编译器能够正常工作：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("arm-none-linux-gnueabi-gcc\narm-none-linux-gnueabi-gcc: no input files\n")])])]),a("p",[s._v("若输出以下信息，则交叉编译器仍然存在问题，无法正常工作：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("arm-none-linux-gnueabi-gcc\nbash:/home/user/tools/gcc-4.4.4-glibc-2.11.1-multilib-1.0/arm-fsl-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc: 没有那个文件或目录\n")])])]),a("p",[s._v("此时请确认：")]),s._v(" "),a("ul",[a("li",[s._v("在安装目录的bin文件下确实有arm-none-linux-gnueabi-gcc文件；")]),s._v(" "),a("li",[s._v("在终端输入arm-none-linux-gnueabi-，按下键盘的TAB键，能找到该命令。")])]),s._v(" "),a("p",[s._v("如果以上两个条件都确认无误，那么问题就好解决了。这种问题主要发生在64位操作系统上，原因在于大多数交叉编译器为了适应性，通常以32位发布，而实际操作系统是64位的，存在架构差异，所以无法执行。")]),s._v(" "),a("p",[s._v("解决方案是在64位的Ubuntu上安装32位兼容库，在终端中执行以下命令：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" lib32z1\n")])])]),a("p",[s._v("安装完成后，再重复以上测试步骤，即可输出正常结果。")]),s._v(" "),a("h2",{attrs:{id:"_2-移植tslib-1-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-移植tslib-1-4"}},[s._v("#")]),s._v(" 2 移植tslib-1.4")]),s._v(" "),a("p",[s._v("tslib是一个开源程序，能够为触摸屏驱动获得的采样提供诸如滤波、去抖动、校准等功能，通常作为触摸屏驱动的适配层，为上层的应用提供了一个统一接口。")]),s._v(" "),a("blockquote",[a("p",[s._v("备注：tslib-1.4源码：https://cloud.189.cn/t/VRv2qmFfqmIz（访问码：t0ov）")])]),s._v(" "),a("p",[s._v("此处在Ubuntu虚拟机上安装并编译tslib-1.4，再将生成的tslib文件夹整个拷贝到嵌入式Linux平台。")]),s._v(" "),a("p",[s._v("在Ubuntu虚拟机中安装并编译tslib-1.4的步骤如下：")]),s._v(" "),a("p",[a("strong",[s._v("（1）在Ubuntu上安装autoconf、automake和libtool，在终端中执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" autoconf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" automake\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" libtool\n")])])]),a("p",[a("strong",[s._v("（2）将tslib-1.4.tar.gz拷贝到Ubuntu虚拟机上，解压，在压缩包目录下打开终端，执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-zxvf")]),s._v(" tslib-1.4.tar.gz\n")])])]),a("p",[a("strong",[s._v("（3）进入解压目录，在终端中执行以下命令（可复制到Ubuntu上再修改路径）：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" tslib-1.4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ./autogen.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ./configure "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/user/tools/tslib "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("arm-fsl-linux-gnueabi "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/user/tools/gcc-4.4.4-glibc-2.11.1-multilib-1.0/arm-fsl-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ac_cv_func_malloc_0_nonnull")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes\n")])])]),a("ul",[a("li",[s._v("--prefix指定安装路径，可自行指定tslib的安装目录；")]),s._v(" "),a("li",[s._v("--host指定交叉编译器，此处指定交叉编译器是arm-fsl-linux-gnueabi；")]),s._v(" "),a("li",[s._v("CC指使用的交叉编译器，请与本地安装的交叉编译器路径一致。")])]),s._v(" "),a("p",[a("strong",[s._v("（4）由于本文使用的Linux开发板的触摸屏驱动没有提供ioctl接口，因此需要屏蔽tslib中ioctl相关代码（若触摸屏驱动有ioctl接口，则跳过该步骤），否则在Linux开发板上运行ts_calibrate会有如下图所示的错误，屏蔽方法为修改tslib-1.4/plugins/input-raw.c文件中的check_fb函数，将该函数修改为以下代码：")])]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("check_fd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("tslib_input")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("using_syn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:t(482),alt:"屏蔽ioctl相关代码"}})]),s._v(" "),a("p",[a("strong",[s._v("（5）编译tslib，在终端中执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n")])])]),a("p",[s._v("若出现如下图所示的错误，是因为Ubuntu内核比较老，相关的宏定义在内核的头文件中没有，需要在tslib库中的头文件（src/tslib.h）声明。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(483),alt:"编译报错"}})]),s._v(" "),a("p",[a("strong",[s._v("打开解压目录下的src/tslib.h文件，在终端中输入以下指令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" src/tslib.h\n")])])]),a("p",[a("strong",[s._v("在src/tslib.h文件中添加以下宏定义，添加完成后保存，再编译即可：")])]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("ABS_MT_SLOT")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2f")]),s._v("    ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* MT slot being modified */")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("ABS_MT_PRESSURE")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x3a")]),s._v("    ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Pressure on contact area */")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("ABS_MT_DISTANCE")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x3b")]),s._v("    ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Contact hover distance */")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("ABS_MT_TOOL_X")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x3c")]),s._v("    ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Center X tool position */")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("ABS_MT_TOOL_Y")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x3d")]),s._v("    ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Center Y tool position */")])]),s._v("\n")])])]),a("p",[a("strong",[s._v("（6）安装tslib到第（3）步设置的目录中（--prefix指定的安装路径），在终端中执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),a("p",[s._v("若可以看到该指定路径下有4个文件夹：/bin、/ect、/lib、/include，则表示安装完成。")]),s._v(" "),a("p",[a("strong",[s._v("（7）为了在移植开发板的时候，可以制定输入模块，需要修改ts.conf文件，进入安装目录下的/ect/文件夹，打开终端，打开ts.conf文件，在终端中输入以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ts.conf\n")])])]),a("p",[s._v("找到#module_raw input那一行，去掉注释#，并检查ts.conf文件是否有以下定义，至此在Ubuntu上安装tslib完成。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("module_raw input\nmodule pthres "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pmin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nmodule variance "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("delta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\nmodule dejitter "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("delta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\nmodule linear\n")])])]),a("p",[a("strong",[s._v("（8）将生成的tslib文件夹整个拷贝到嵌入式Linux平台。比如此次拷贝到/usr/local/目录中")])]),s._v(" "),a("p",[a("strong",[s._v("（9）打开Linux开发板的环境变量文件/etc/profile，在终端中执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/profile\n")])])]),a("p",[a("strong",[s._v("（10）在/etc/profile文件文件末尾添加如下内容：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_ROOT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/tslib                       /* 指定tslib目录路径 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_TSDEVICE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/input/event0                  /* 指定触摸屏设备 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_CALIBFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/pointercal                   /* 指定校准文件的存放位置 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_CONFFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TSLIB_ROOT")]),s._v("/etc/ts.conf            /* 指定tslib配置文件的路径 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_PLUGINDIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TSLIB_ROOT")]),s._v("/lib/ts                /* 指定tslib插件文件的路径 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TSLIB_FBDEVICE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/fb0                           /* 指定帧缓冲设备 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("QWS_MOUSE_PROTO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tslib:/dev/input/event0           /* 指定鼠标设备 */\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LD_LIBRARY_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TSLIB_ROOT")]),s._v("/lib:"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LD_LIBRARY_PATH")]),s._v("  /* 添加tslib库 */\n")])])]),a("p",[s._v("其中TSLIB_ROOT更改为自己实际存放的tslib的绝对路径。")]),s._v(" "),a("p",[s._v("TSLIB_TSDEVICE和QWS_MOUSE_PROTO这两项需要查看自己的开发板触摸屏设备对应/dev/input下的文件。例如本文采用的iMX287A开发板中的触摸屏设备文件所在路径为/dev/input/event0。")]),s._v(" "),a("p",[a("strong",[s._v("（11）重新启动Linux开发板，使系统重新读取/etc/profile的环境变量，在终端执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])])]),a("p",[a("strong",[s._v("（12）进入/usr/local/tslib/bin目录，运行ts_calibrate，测试tslib是否安装和移植完成，在终端中执行以下命令：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/tslib/bin\n./ts_calibrate\n")])])]),a("p",[s._v("若Linux开发板出现如下图所示的界面，则tslib安装和移植完成。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(484),alt:"tslib移植完成"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);